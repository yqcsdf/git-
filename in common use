创建并切换到分支：git checkout -b num-feat-name；

VSCODE下可用视图化操作将文件存入暂存区以及提交；

命令行下使用git add . 存入暂存区, git commit -m '备注' 提交；

合并某分支到当前分支：git merge num-feat-name；（先切换到主分支）；

合并完成后可以执行删除自己的分支：git branch -D num-feat-name；

删除后查看分支目录：git branch；

git commit --amend  补充后续提交 （会进入vm编辑器，此时输入:wq保存退出）；

git push -f origin 强制上传；

解决冲突方法：
	   git checkout develop切换到主分支,pull代码 ，切换到自己的分支git checkout xxx；
	   在自己的分支下，输入 git rebase develop 进行冲突检查，提示冲突后手动修改，提交到缓存区；
	   修改完成后在自己分支下输入 git rebase --continue 进行提交,不需要commit；
	   最后再次 git push -f origin 上传；


=== 后端接口环境部署 ===

git clone 项目
rvm install x.x.x 安装项目使用的ruby版本
rvm list 查看已安装ruby版本
gem install bundler 安装bundler依赖
bundle
cp config/database.yml.example config/database.yml 基于example创建数据库配置文件
rake db:create 创建数据库
rake db:migrate 迁移
gem install foreman
gem install subcontractor
cp Procfile.example Procfile 基于example创建Procfile配置文件
rails start 运行
